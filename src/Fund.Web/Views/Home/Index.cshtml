@using MoreLinq
@{
    ViewBag.Title = "Home Page";

    var sharj = new SharjHelper();
    var All = sharj.GetAll();
    DB db = new DB();
    double cash = 0;



    List<CostsByMonthsChartModel> chart = new List<CostsByMonthsChartModel>();
    var costs =  db.Costs.AsEnumerable()
        .Where(p => p.FactorDateTime.HasValue)
        .Where(p=>p.Percents.Any(d=>d.Percent == 100 ) == false)
        .GroupBy(p => p.FactorDateTime.Value.Year + p.FactorDateTime.Value.Month);
    
    var costsGbyMonths = costs.Select(p => new
    {
        value = new CostsByMonthsChartModel()
        {
            Date = new m2s().m2sYearAndMonthNumeric(p.First().FactorDateTime.Value),
            Partner = "مجموع",
            TotalCost = p.Sum(d => d.Amount / 10)
        }
    });

    chart.AddRange(costsGbyMonths.Select(p => p.value).ToList());

    foreach (var partner in db.Partners)
    {

        var temp = costs.Select(p => new
        {
            value = new CostsByMonthsChartModel()
            {
                Date = new m2s().m2sYearAndMonthNumeric(p.First().FactorDateTime.Value),
                Partner = partner.Name,
                TotalCost = (p.Sum(d => (d.Amount / 10) * d.Percents.First(c => c.PartnerID == partner.ID).Percent)) / 100
            }
        });

        chart.AddRange(temp.Select(p => p.value));

    }

    var serializer = new System.Web.Script.Serialization.JavaScriptSerializer();
    var labels = serializer.Serialize(chart.Select(p => p.Date).DistinctBy(p => p).OrderBy(p => p));

    var dataSets = Newtonsoft.Json.JsonConvert.SerializeObject(chart.GroupBy(p => p.Partner).Select(p => new
    {
        label = p.First().Partner,
        pointColor = CostsByMonthsChartModel.getPartnerColor(p.First().Partner),
        lineColor = CostsByMonthsChartModel.getPartnerColor(p.First().Partner),
        data = p.OrderBy(d => d.Date).Select(d => d.TotalCost).ToArray()
    }), new Newtonsoft.Json.JsonSerializerSettings { Formatting = Newtonsoft.Json.Formatting.Indented });

}

@*@foreach (var group in chart)
    {
        <h1 class="left-align" style="direction:ltr;">
            @group.Partner : @group.Date  : @group.TotalCost
        </h1>
    }*@

@section scripts{
    <script>
        var randomScalingFactor = function () { return Math.round(Math.random() * 100) };

        var lineChartData = {
            labels :@Html.Raw( labels) ,
            datasets : @Html.Raw(dataSets)
            }

        window.onload = function(){
            var ctx = document.getElementById("canvas").getContext("2d");
            window.myLine = new Chart(ctx).Line(lineChartData, {
                datasetFill : false,
                legendTemplate : "<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\"background-color:<%=datasets[i].fillColor%>\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>",
                responsive: true
            });
        }
    </script>
}


<h3>موجودی حساب ها</h3>

<table class="bordered hoverable">
    <tr>

        @foreach (var s in sharj.GetAll())
        {
            <td>@db.Partners.Find(s.Key).Name</td>

        }
    </tr>
    <tr>

        @foreach (var s in sharj.GetAll())
        {
            <td class="en"><span class="splitBy3">@((int)s.Value)</span> ریال</td>

            cash += s.Value;

        }
    </tr>
    <tr>
        <td>
            <h5>
                موجودی حساب : <span class="splitBy3">@((int)cash)</span> ریال
            </h5>
        </td>
    </tr>

</table>

<div style="margin-top:40px;">
    <canvas id="canvas" height="250" width="800"></canvas>
</div>
<ul class="chart-labels">
    <li>
        <span class="box" style="background:#000;">
        </span>
        <span>
            مجموع
        </span>
    </li>
    @foreach (var partner in db.Partners)
    {
        string color = CostsByMonthsChartModel.getPartnerColor(partner.Name);
        <li>
            <span class="box" style="background:@color;">
            </span>
            <span>
                @partner.Name
            </span>
        </li>
    }
</ul>